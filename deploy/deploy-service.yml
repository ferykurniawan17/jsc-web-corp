---
- hosts: swarm
  become: true
  become_user: '{{ ansible_user }}'
  tasks:
    - name: docker login
      docker_login:
        registry: "{{ lookup('env', 'DOCKER_REGISTRY') | mandatory }}"
        username: "{{ lookup('env', 'DOCKER_USER') | mandatory }}"
        password: "{{ lookup('env', 'DOCKER_PASSWORD') | mandatory }}"

    - name: deploy service
      docker_swarm_service:
        name: "{{ lookup('env', 'SWARM_SERVICE_NAME') | mandatory }}"
        state: present
        image: "{{ service_image | mandatory }}"
        resolve_image: yes
        force_update: yes
        replicas: "{{ lookup('env', 'SWARM_REPLICAS') | default(1, true) }}"
        limits:
          cpus: "{{ lookup('env', 'SWARM_LIMIT_CPUS') | default(0.5, true) }}"
          memory: "{{ lookup('env', 'SWARM_LIMIT_MEMORY') | default('128M', true) }}"
        reservations:
          cpus: "{{ lookup('env', 'SWARM_RESERVE_CPUS') | default(0.1, true) }}"
          memory: "{{ lookup('env', 'SWARM_RESERVE_MEMORY') | default('64M', true) }}"
        networks:
          - "{{ lookup('env', 'SWARM_NETWORK_NAME') | mandatory }}"
          - traefik
        # publish:
        #   - mode: ingress
        #     published_port: "{{ lookup('env', 'SWARM_PUBLISHED_PORT') | mandatory }}"
        #     target_port: "{{ lookup('env', 'SERVER_PORT') | default(80, true) }}"
        labels:
          traefik.enable: "true"
          traefik.docker.network: traefik
          traefik.http.routers.landingpage.rule: "{{ lookup('env', 'SWARM_TRAEFIK_RULE') | mandatory }}"
          traefik.http.routers.landingpage.entryPoints: web
          traefik.http.routers.landingpage.service: landingpage-service
          traefik.http.services.landingpage-service.loadbalancer.server.port: "{{ lookup('env', 'SERVER_PORT') | mandatory }}"
        env:
          PORT: "{{ lookup('env', 'PORT') | mandatory }}"
          API: "{{ lookup('env', 'API') | mandatory }}"
